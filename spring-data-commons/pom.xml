<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!--

        Licensed to the Apache Software Foundation (ASF) under one or more
        contributor license agreements.  See the NOTICE file distributed with
        this work for additional information regarding copyright ownership.
        The ASF licenses this file to You under the Apache License, Version 2.0
        (the "License"); you may not use this file except in compliance with
        the License.  You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
    -->

    <modelVersion>4.0.0</modelVersion>

    <parent>
		<groupId>org.beamfoundry.bundles.spring-data</groupId>
        <artifactId>org.beamfoundry.bundles.spring-data-parent</artifactId>
		<version>1.4.4.RELEASE_1</version>
		<relativePath>../spring-data-parent/pom.xml</relativePath>
    </parent>

    <groupId>org.beamfoundry.bundles.spring-data</groupId>
    <artifactId>org.beamfoundry.bundles.spring-data-commons</artifactId>
	<version>1.8.4.RELEASE_1</version>
    <packaging>bundle</packaging>
    <name>Bundles :: spring-data :: Commons</name>

    <properties>

        <pkgGroupId>org.springframework.data</pkgGroupId>
        <pkgArtifactId>spring-data-commons</pkgArtifactId>
		<pkgVersion>${springdata.commons}</pkgVersion>
		<servicemix.osgi.dynamicimport.pkg>*</servicemix.osgi.dynamicimport.pkg>
        <servicemix.osgi.export.pkg>
            org.springframework.data
        </servicemix.osgi.export.pkg>
		<servicemix.osgi.import.pkg>
			<!--
			com.fasterxml.jackson.core,
			com.fasterxml.jackson.databind,
			com.fasterxml.jackson.databind.annotation,
			com.fasterxml.jackson.databind.module,-->
			com.fasterxml.jackson.*;version="[${jackson}, 3.0.0)";resolution:=optional,
			com.google.common.base;version="${guava}";resolution:=optional,
			com.mysema.query.types;version="[${querydsl}, 3.4.0)";resolution:=optional,
			<!-- 
			javax.enterprise.context,
			javax.enterprise.context.spi,
			javax.enterprise.event,
			javax.enterprise.inject,
			javax.enterprise.inject.spi,
			javax.enterprise.util,
			 -->
			javax.enterprise.*;version="${cdi}";resolution:=optional,
			javax.inject;resolution:=optional,
			javax.xml.*;version="[2.2.0, 2.3.0)";resolution:=optional,
			org.aopalliance.aop;version="[1,2)";resolution:=optional,
            org.aopalliance.intercept;version="[1,2)";resolution:=optional,
			org.joda.time;version="${jodatime}";resolution:=optional,
			org.slf4j;version="[1.7.0, 1.9.0)",
			org.springframework.aop.framework;version="[${spring.osgi},4.1)",
			org.springframework.aop.target;version="[${spring.osgi},4.1)",
			org.springframework.beans;version="[${spring.osgi},4.1)",
			org.springframework.beans.factory;version="[${spring.osgi},4.1)",
			org.springframework.beans.factory.annotation;version="[${spring.osgi},4.1)",
			org.springframework.beans.factory.config;version="[${spring.osgi},4.1)",
			org.springframework.beans.factory.parsing;version="[${spring.osgi},4.1)",
			org.springframework.beans.factory.support;version="[${spring.osgi},4.1)",
			org.springframework.beans.factory.xml;version="[${spring.osgi},4.1)",
			org.springframework.context;version="[${spring.osgi},4.1)",
			org.springframework.context.annotation;version="[${spring.osgi},4.1)",
			org.springframework.context.event;version="[${spring.osgi},4.1)",
			org.springframework.context.expression;version="[${spring.osgi},4.1)",
			org.springframework.core;version="[${spring.osgi},4.1)",
			org.springframework.core.annotation;version="[${spring.osgi},4.1)",
			org.springframework.core.convert;version="[${spring.osgi},4.1)",
			org.springframework.core.convert.converter;version="[${spring.osgi},4.1)",
			org.springframework.core.convert.support;version="[${spring.osgi},4.1)",
			org.springframework.core.env;version="[${spring.osgi},4.1)",
			org.springframework.core.io;version="[${spring.osgi},4.1)",
			org.springframework.core.io.support;version="[${spring.osgi},4.1)",
			org.springframework.core.type;version="[${spring.osgi},4.1)",
			org.springframework.core.type.classreading;version="[${spring.osgi},4.1)",
			org.springframework.core.type.filter;version="[${spring.osgi},4.1)",
			org.springframework.dao;version="[${spring.osgi},4.1)",
			org.springframework.dao.support;version="[${spring.osgi},4.1)",
			org.springframework.expression;version="[${spring.osgi},4.1)",
			org.springframework.expression.spel.standard;version="[${spring.osgi},4.1)",
			org.springframework.expression.spel.support;version="[${spring.osgi},4.1)",
			org.springframework.format;version="[${spring.osgi},4.1)",
			org.springframework.format.support;version="[${spring.osgi},4.1)",
			org.springframework.hateoas;version="${springhateoas.osgi}";resolution:=optional,
			org.springframework.hateoas.core;version="${springhateoas.osgi}";resolution:=optional,
			org.springframework.hateoas.mvc;version="${springhateoas.osgi}";resolution:=optional,
			org.springframework.oxm;version="[${spring.osgi},4.1)",
			org.springframework.scheduling.annotation;version="[${spring.osgi},4.1)",
			org.springframework.transaction;version="[${spring.osgi},4.1)",
			org.springframework.transaction.annotation;version="[${spring.osgi},4.1)",
			org.springframework.transaction.interceptor;version="[${spring.osgi},4.1)",
			org.springframework.transaction.support;version="[${spring.osgi},4.1)",
			org.springframework.util;version="[${spring.osgi},4.1)",
			org.springframework.web.bind.support;version="[${spring.osgi},4.1)";resolution:=optional,
			org.springframework.web.context.request;version="[${spring.osgi},4.1)";resolution:=optional,
			org.springframework.web.method.support;version="[${spring.osgi},4.1)";resolution:=optional,
			org.springframework.web.servlet.config.annotation;version="[${spring.osgi},4.1)";resolution:=optional,
			org.springframework.web.servlet.support;version="[${spring.osgi},4.1)";resolution:=optional,
			org.springframework.web.util;version="[${spring.osgi},4.1)";resolution:=optional,
			org.w3c.dom;resolution:=optional,
        </servicemix.osgi.import.pkg>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${pkgGroupId}</groupId>
            <artifactId>${pkgArtifactId}</artifactId>
            <version>${pkgVersion}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
			<!--
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.7</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Description>${project.description}</Bundle-Description>
                        <Export-Package>${servicemix.osgi.export}</Export-Package>
                        <Import-Package>${servicemix.osgi.import.pkg}</Import-Package>
                        <Private-Package>${servicemix.osgi.private.pkg}</Private-Package>
                        <DynamicImport-Package>${servicemix.osgi.dynamicimport.pkg}</DynamicImport-Package>
                        <Embed-Dependency>${servicemix.osgi.embed.dependency}</Embed-Dependency>
                        <Bundle-NativeCode>${servicemix.osgi.native}</Bundle-NativeCode>
                        <Bundle-Activator>${servicemix.osgi.activator}</Bundle-Activator>
                        <Fragment-Host>${servicemix.osgi.fragment.host}</Fragment-Host>
                        <Provide-Capability>${servicemix.osgi.provide.capability}</Provide-Capability>
                        <Require-Capability>${servicemix.osgi.require.capability}</Require-Capability>
                        <SPI-Provider>${servicemix.spi.provider}</SPI-Provider>
                        <SPI-Consumer>${servicemix.spi.consumer}</SPI-Consumer>
                        <_failok>${servicemix.osgi.failok}</_failok>
                        <_versionpolicy>[$(version;==;$(@)),$(version;+;$(@)))</_versionpolicy>
                        <_removeheaders>Ignore-Package,Include-Resource,Private-Package,Embed-Dependency
                        </_removeheaders>
                    </instructions>
                    <unpackBundle>true</unpackBundle>
                </configuration>
            </plugin>
			-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>${pkgGroupId}:${pkgArtifactId}</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>${pkgGroupId}:${pkgArtifactId}</artifact>
									<includes>
										<include>META-INF/services/**</include>
										<include>META-INF/spring.*</include>
										<include>**/*.xsd</include>
									</includes>
                                </filter>
                            </filters>
                            <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
